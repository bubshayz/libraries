"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[253],{58320:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"","params":[{"name":"remoteFunction","desc":"","lua_type":"RemoteFunction"}],"returns":[{"desc":"","lua_type":"ClientRemoteProperty\\r\\n"}],"function_type":"static","private":true,"source":{"line":50,"path":"src/network/client/ClientRemoteProperty.lua"}},{"name":"is","desc":"Returns a boolean indicating if `self` is a client remote property or not.","params":[{"name":"self","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":67,"path":"src/network/client/ClientRemoteProperty.lua"}},{"name":"get","desc":"Returns the value of the client stored in the serverside remote property (to which the client remote property is connected to).\\nIf there is no value stored specifically for the client, then the serverside remote property\'s current value will be returned\\ninstead.","params":[],"returns":[{"desc":"","lua_type":"any\\r\\n"}],"function_type":"method","tags":["ClientRemoteProperty instance"],"source":{"line":79,"path":"src/network/client/ClientRemoteProperty.lua"}},{"name":"set","desc":"Invokes the serverside remote property (to which this client remote propert is connected to), to set the value for the client to `value`.","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","tags":["ClientRemoteProperty instance"],"source":{"line":89,"path":"src/network/client/ClientRemoteProperty.lua"}},{"name":"destroy","desc":"Destroys the client remote property and renders it unusable.","params":[],"returns":[],"function_type":"method","tags":["ClientRemoteProperty instance"],"source":{"line":99,"path":"src/network/client/ClientRemoteProperty.lua"}}],"properties":[{"name":"updated","desc":" \\n\\nA [signal](https://sleitnick.github.io/RbxUtil/api/Signal/) which is fired, whenever the value \\nof the serverside remote property (to which this client remote property is connected) is updated.\\n\\nIncase the client has a specific value set for them in the serverside remote property, then this signal\\nwill only fire if *that* value has been updated.","lua_type":"Signal <newValue: any>","tags":["Signal","ClientRemoteProperty instance"],"readonly":true,"source":{"line":21,"path":"src/network/client/ClientRemoteProperty.lua"}},{"name":"ClientRemoteProperty","desc":" \\n\\n\\nAn exported Luau type of a client remote property object.","lua_type":"Type","readonly":true,"source":{"line":30,"path":"src/network/client/ClientRemoteProperty.lua"}}],"types":[],"name":"ClientRemoteProperty","desc":"The clientside counterpart of [RemoteProperty]. A client remote property \\nin layman\'s terms is just an object connected to a serverside remote property.","source":{"line":7,"path":"src/network/client/ClientRemoteProperty.lua"}}')}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[379],{43007:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"A constructor method that creates a new property object, with `initialValue` as the current value\\nof the property.","params":[{"name":"initialValue","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Property"}],"function_type":"static","source":{"line":52,"path":"src/Property/init.lua"}},{"name":"is","desc":"A method that returns a boolean indicating if `self` is a property or not.","params":[{"name":"self","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":63,"path":"src/Property/init.lua"}},{"name":"set","desc":"Sets the value of the property to `value`, if this new value isn\'t the same as the previous value. ","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","tags":["Property Instance"],"source":{"line":73,"path":"src/Property/init.lua"}},{"name":"deferredSet","desc":"Works the same as [Property:set], except the updating of the property\'s value to `value` is deferred through [task.defer](https://create.roblox.com/docs/reference/engine/libraries/task#defer).","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","tags":["Property Instance"],"source":{"line":88,"path":"src/Property/init.lua"}},{"name":"forceSet","desc":"Works the same as [Property:set] except that tables aren\'t checked for equality, for e.g:\\n\\n```lua\\nlocal property = Property.new()\\n\\nproperty.updated:Connect(function(newVal)\\n    warn(newVal) --\x3e {1}\\nend)\\n\\nlocal t = {1}\\n\\nproperty:forceSet(t) --\x3e Fires off the .Updated signal (expected)\\n\\n-- This ought to not fire off the signal, but the previous and new value\\n-- aren\'t checked for equality since they\'re both tables)\\nproperty:forceSet(t) \\n\\n-- Fires off the .Updated signal (expected as a number ~= table) \\nproperty:forceSet(1) \\n\\n-- Does NOT fire off the .Updated signal, since the previous value \\n-- (a number, not a table) and the new value (a number, not a table) are the\\n-- same!\\nproperty:forceSet(1) \\n```","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","tags":["Property Instance"],"source":{"line":129,"path":"src/Property/init.lua"}},{"name":"bulkSet","desc":"Works almost the same as [Property:set], but never fires off the [Property.updated] signal.","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","tags":["Property Instance"],"source":{"line":144,"path":"src/Property/init.lua"}},{"name":"get","desc":"Returns the current value of the property.\\n\\n```lua\\nlocal property = Property.new()\\n\\nproperty:set(5)\\nprint(property:get()) --\x3e 5\\n```","params":[],"returns":[{"desc":"","lua_type":"any\\r\\n"}],"function_type":"method","tags":["Property Instance"],"source":{"line":161,"path":"src/Property/init.lua"}},{"name":"destroy","desc":"Destroys the property and renders it unusable.","params":[],"returns":[],"function_type":"method","tags":["Property Instance"],"source":{"line":171,"path":"src/Property/init.lua"}}],"properties":[{"name":"updated","desc":" \\n\\nA [signal](https://sleitnick.github.io/RbxUtil/api/Signal/) which is fired whenever the value of the property is \\nset to a new one. The signal is only passed the new value as the only argument.","lua_type":"Signal <newValue: any>","tags":["Signal","Property Instance"],"readonly":true,"source":{"line":28,"path":"src/Property/init.lua"}},{"name":"Property","desc":" \\n\\nAn exported Luau type of a property object.","lua_type":"Type","readonly":true,"source":{"line":36,"path":"src/Property/init.lua"}}],"types":[],"name":"Property","desc":" \\n\\nA class for wrapping values around setters and getters. A property in layman\'s terms is simply an object which contains some value.\\n \\n```lua\\nlocal property = Property.new(5)\\nprint(property:get()) --\x3e 5\\n\\nproperty.updated:Connect(function(newValue)\\n    print(newValue) --\x3e 10\\nend)\\n\\nproperty:set(10) \\n```","source":{"line":17,"path":"src/Property/init.lua"}}')}}]);